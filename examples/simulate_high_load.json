[{"id":"a00a54531685a00b","type":"function","z":"f3e346780eaa6c3c","name":"Manage worker threads","func":"switch(msg.payload) {\n    case \"create_worker\":\n        debugger;\n        var newWorker = new workerThreads.Worker('./web_worker_test_script.js');\n        context.workers.push(newWorker);\n        node.warn(\"Created new worker thread in the main process\");\n        break;\n    case \"terminate_worker\":\n        // Get and remove the first worker from the array\n        var workerToTerminate = context.workers.shift();\n        \n        if (!workerToTerminate) {\n            node.error(\"There are no workers to terminate\", msg);\n        }\n        else {\n            workerToTerminate.terminate();\n            node.warn(\"Terminated worker thread in the main process\");\n        }\n}\n\nnode.status({fill:\"green\", shape:\"dot\", text:context.workers.length + \" workers\"});","outputs":0,"noerr":0,"initialize":"var script = \n\"function blockCpuFor(ms) {                         \" +\n\"    var now = new Date().getTime();                \" +\n\"    var result = 0;                                \" +\n\"    while(true) {                                  \" +\n\"        result += Math.random() * Math.random();   \" +\n\"        if (new Date().getTime() > now +ms)        \" +\n\"            return;                                \" +\n\"    }                                              \" +\n\"}                                                  \" +\n\"                                                   \" +\n\"setInterval(function() {                           \" +\n\"    blockCpuFor(500);                              \" +\n\"} , 1000);                                         \"\n\nfs.writeFile('web_worker_test_script.js', script, function (err) {\n    if (err) {\n        node.error(\"Cannot create web_worker_test_script.js file: \" + err);\n    }\n});\n\nnode.status({fill:\"green\", shape:\"dot\", text:\"0 workers\"});\n\ncontext.workers = [];","finalize":"context.workers.forEach(function(workerToTerminate) {\n    workerToTerminate.terminate();\n})\n\ncontext.workers = [];\n\nfs.unlink('./web_worker_test_script.js', function(err) {\n    if (err) {\n        node.error(\"Cannot remove the web_worker_test_script. file\");\n    }\n})\n\nnode.status({fill:\"green\", shape:\"dot\", text:\"0 workers\"});","libs":[{"var":"fs","module":"fs"},{"var":"workerThreads","module":"worker_threads"}],"x":670,"y":640,"wires":[]},{"id":"7da2f9efe327f572","type":"inject","z":"f3e346780eaa6c3c","name":"Create worker thread","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"create_worker","payloadType":"str","x":400,"y":640,"wires":[["a00a54531685a00b"]]},{"id":"ebdcae1127007a21","type":"inject","z":"f3e346780eaa6c3c","name":"Terminate worker thread","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"terminate_worker","payloadType":"str","x":410,"y":680,"wires":[["a00a54531685a00b"]]},{"id":"d2130d2d472f793d","type":"function","z":"f3e346780eaa6c3c","name":"Manage child processes","func":"switch(msg.payload) {\n    case \"create_child_process\":\n        var newChildProcess = childProcess.spawn('node', ['./child_process_test_script.js']);\n        context.childProcesses.push(newChildProcess);\n        node.warn(\"Created new child process with pid = \" + newChildProcess.pid);\n        break;\n    case \"kill_child_process\":\n        // Get and remove the first child process from the array\n        var childProcessToKill = context.childProcesses.shift();\n        \n        if (!childProcessToKill) {\n            node.error(\"There are no child processes to kill\", msg);\n        }\n        else {\n            childProcessToKill.kill();\n            node.warn(\"Killed child process with pid = \" + childProcessToKill.pid);\n        }\n        break;\n}\n\nnode.status({fill:\"green\", shape:\"dot\", text:context.childProcesses.length + \" child processes\"});","outputs":0,"noerr":0,"initialize":"var script = \n\"function blockCpuFor(ms) {                         \" +\n\"    var now = new Date().getTime();                \" +\n\"    var result = 0;                                \" +\n\"    while(true) {                                  \" +\n\"        result += Math.random() * Math.random();   \" +\n\"        if (new Date().getTime() > now +ms)        \" +\n\"            return;                                \" +\n\"    }                                              \" +\n\"}                                                  \" +\n\"                                                   \" +\n\"setInterval(function() {                           \" +\n\"    blockCpuFor(500);                              \" +\n\"} , 1000);                                         \"\n\nfs.writeFile('./child_process_test_script.js', script, function (err) {\n    if (err) {\n        node.error(\"Cannot create child_process_test_script.js file: \" + err);\n    }\n});\n\nnode.status({fill:\"green\", shape:\"dot\", text:\"0 child processes\"});\n\ncontext.childProcesses = [];","finalize":"context.childProcesses.forEach(function(childProcessToKill) {\n    childProcessToKill.kill();\n})\n\ncontext.childProcesses = [];\n\nfs.unlink('./child_process_test_script.js', function(err) {\n    if (err) {\n        node.error(\"Cannot remove the child_process_test_script. file\");\n    }\n})\n\nnode.status({fill:\"green\", shape:\"dot\", text:\"0 child processes\"});","libs":[{"var":"fs","module":"fs"},{"var":"childProcess","module":"child_process"}],"x":650,"y":740,"wires":[]},{"id":"b20a8eaccb2f04cd","type":"inject","z":"f3e346780eaa6c3c","name":"Create child process","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"create_child_process","payloadType":"str","x":390,"y":740,"wires":[["d2130d2d472f793d"]]},{"id":"e415623437b61e6a","type":"inject","z":"f3e346780eaa6c3c","name":"Kill child process","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"kill_child_process","payloadType":"str","x":380,"y":780,"wires":[["d2130d2d472f793d"]]},{"id":"5dd5db06e188dadb","type":"function","z":"f3e346780eaa6c3c","name":"Main thread","func":"function blockCpuFor(ms) {\n    var now = new Date().getTime();\n    var result = 0\n    while(true) {\n        result += Math.random() * Math.random();\n        if (new Date().getTime() > now +ms)\n            return;\n    }   \n}\n\nswitch(msg.payload) {\n    case \"start_working\":\n        if (context.timer) {\n            node.error(\"The thread is already working\");\n            return;\n        }\n        else {\n            context.timer = setInterval(function() { \n                blockCpuFor(500);\n            } , 1000);\n            \n            node.status({fill:\"green\", shape:\"dot\", text:\"working...\"});\n        }\n        break;\n    case \"stop_working\":\n        if (!context.timer) {\n            node.error(\"The thread is not yet working\");\n            return;\n        }\n        else {\n            clearInterval(context.timer);\n            context.timer = null;\n            node.status({});\n        }\n}","outputs":0,"noerr":0,"initialize":"node.status({});","finalize":"node.status({});","libs":[{"var":"fs","module":"fs"},{"var":"Sleep","module":"sleep"}],"x":570,"y":540,"wires":[]},{"id":"24cc6c9bee12f5c5","type":"inject","z":"f3e346780eaa6c3c","name":"Start working","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"start_working","payloadType":"str","x":370,"y":540,"wires":[["5dd5db06e188dadb"]]},{"id":"327e610a51a83312","type":"inject","z":"f3e346780eaa6c3c","name":"Stop working","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"stop_working","payloadType":"str","x":370,"y":580,"wires":[["5dd5db06e188dadb"]]}]
